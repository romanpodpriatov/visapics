#!/usr/bin/env python3
import os
from dotenv import load_dotenv
import sib_api_v3_sdk
from sib_api_v3_sdk.rest import ApiException

def main():
    # 1) –ü–æ–¥–≥—Ä—É–∂–∞–µ–º .env
    load_dotenv()
    api_key = os.getenv('MAIL_API')
    if not api_key:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è MAIL_API –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env")
        return

    # 2) –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç —Å API‚Äë–∫–ª—é—á–æ–º
    configuration = sib_api_v3_sdk.Configuration()
    # –∑–¥–µ—Å—å –≤–∞–∂–Ω–æ –∏–º–µ–Ω–Ω–æ 'api-key'
    configuration.api_key['api-key'] = api_key
    api_client = sib_api_v3_sdk.ApiClient(configuration)

    # 3) –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é ‚Äî –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
    account_api = sib_api_v3_sdk.AccountApi(api_client)
    try:
        account_info = account_api.get_account()
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç:")
        print(f"   Email: {account_info.email}")
        print(f"   Plan:  {account_info.plan_code}")
    except ApiException as e:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è:", e)
        return

    # 4) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ Transactional API
    smtp_api = sib_api_v3_sdk.TransactionalEmailsApi(api_client)
    mail = sib_api_v3_sdk.SendSmtpEmail(
        to=[{"email": "cooki.fc@gmail.com", "name": "Test Recipient"}],
        sender={"email": "support@visapics.org", "name": "Roman Podpriatov"},
        subject="üîî –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç visapics (V2)",
        text_content="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ Brevo Transactional API (V2).",
        html_content="<strong>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —á–µ—Ä–µ–∑ Brevo Transactional API (V2).</strong>"
    )
    try:
        resp = smtp_api.send_transac_email(mail)
        print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û—Ç–≤–µ—Ç API:")
        print(resp)
    except ApiException as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:", e)

if __name__ == '__main__':
    main()
